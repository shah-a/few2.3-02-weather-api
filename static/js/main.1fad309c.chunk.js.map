{"version":3,"sources":["components/Weather/DataDisplay/DataDisplay.js","components/Weather/CodeInput/CodeInput.js","components/Weather/UnitsSelect/UnitsSelect.js","components/Weather/UnitsRadio/UnitsRadio.js","utils/fetchWeather.js","components/Weather/Weather.js","components/Footer/Footer.js","components/App.js","index.js"],"names":["DataDisplay","props","code","data","className","toUpperCase","temp","feelsLike","description","CodeInput","setCode","loading","button","disabled","type","placeholder","pattern","maxLength","value","onChange","e","target","UnitsSelect","units","setUnits","UnitsRadio","label","name","checked","fetchWeather","setData","a","RegExp","test","urlQuery","fetchUrl","process","headers","body","JSON","stringify","urlBase","fetch","method","json","cod","toString","main","feels_like","weather","Weather","useState","setLoading","onSubmit","preventDefault","map","val","slice","Footer","href","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAwBeA,EAxBK,SAACC,GACnB,IAAQC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KAEd,OAAIA,EAEA,sBAAKC,UAAU,mBAAf,UACE,oBAAIA,UAAU,gDAAd,SAA+DF,EAAKG,eAAiB,gBACrF,uCAAS,iCAASF,EAAKG,UACvB,6CAAe,iCAASH,EAAKI,eAC7B,8CAAgB,iCAASJ,EAAKK,oBAMlC,sBAAKJ,UAAU,mBAAf,UACE,oBAAIA,UAAU,gDAAd,SAA+DF,EAAKG,eAAiB,gBACrF,uCAAS,4CACT,6CAAe,4CACf,8CAAgB,gDCYPI,EA/BG,SAACR,GACjB,IAAQC,EAA2BD,EAA3BC,KAAMQ,EAAqBT,EAArBS,QAASC,EAAYV,EAAZU,QAEjBC,EAASD,EACb,wBAAQE,UAAQ,EAACT,UAAU,iDAA3B,qBAIA,wBAAQU,KAAK,SAASV,UAAU,mEAAhC,oBAKF,OACE,sBAAKA,UAAU,iBAAf,UACE,uBAAOA,UAAU,aAAjB,kEACA,uBACEU,KAAK,OACLC,YAAY,kBACZC,QAAQ,mCACRC,UAAU,IACVb,UAAU,0BACVc,MAAOhB,EACPW,SAAUF,EACVQ,SAAU,SAACC,GAAD,OAAOV,EAAQU,EAAEC,OAAOH,UAEnCN,MCVQU,EAhBK,SAACrB,GACnB,IAAQsB,EAAoBtB,EAApBsB,MAAOC,EAAavB,EAAbuB,SAEf,OACE,yBACEN,MAAOK,EACPnB,UAAU,qCACVe,SAAU,SAACC,GAAD,OAAOI,EAASJ,EAAEC,OAAOH,QAHrC,UAKE,wBAAQA,MAAM,SAAd,qBACA,wBAAQA,MAAM,WAAd,wBACA,wBAAQA,MAAM,WAAd,wBCMSO,EAjBI,SAACxB,GAClB,IAAQyB,EAAmCzB,EAAnCyB,MAAOC,EAA4B1B,EAA5B0B,KAAMC,EAAsB3B,EAAtB2B,QAAST,EAAalB,EAAbkB,SAE9B,OACE,wBAAOf,UAAU,aAAjB,UACE,uBACEU,KAAK,QACLV,UAAU,OACVuB,KAAMA,EACNC,QAASA,EACTT,SAAUA,IAEXO,MCWQG,EAvBG,uCAAG,WAAO3B,EAAMqB,EAAOO,GAApB,uBAAAC,EAAA,6DACnB7B,EAAO,IAAI8B,OAAO,mBAAmBC,KAAK/B,GAAnC,UAA8CA,EAA9C,OAA0DA,EAEjD,kDACVgC,EAJa,eAIMhC,EAJN,kBAIoBqB,GAEjCY,EANa,UAMCC,oCAND,YAOJ,OACTC,EAAU,CAAE,eAAgB,oBAC5BC,EAAOC,KAAKC,UAAU,CAAEC,QANd,kDAMuBP,aATpB,SAWFQ,MAAMP,EAAU,CAAEQ,OAJpB,OAI4BN,UAASC,SAXjC,cAWfnC,EAXe,iBAYNA,EAAKyC,OAZC,QAgBQ,OAJ3BzC,EAZmB,QAgBd0C,IAAIC,WAAW,GAAahB,EAAQ,MAAQA,EAAQ,CACvDxB,KAAMH,EAAK4C,KAAKzC,KAChBC,UAAWJ,EAAK4C,KAAKC,WACrBxC,YAAaL,EAAK8C,QAAQ,GAAGzC,cAnBZ,4CAAH,0DCwCH0C,EAjCC,WACd,MAAwBC,mBAAS,IAAjC,mBAAOjD,EAAP,KAAaQ,EAAb,KACA,EAA0ByC,mBAAS,UAAnC,mBAAO5B,EAAP,KAAcC,EAAd,KACA,EAAwB2B,mBAAS,MAAjC,mBAAOhD,EAAP,KAAa2B,EAAb,KACA,EAA8BqB,oBAAS,GAAvC,mBAAOxC,EAAP,KAAgByC,EAAhB,KAEA,OACE,qBAAKhD,UAAU,oDAAf,SACE,uBACEiD,SAAQ,uCAAE,WAAOjC,GAAP,SAAAW,EAAA,6DACRX,EAAEkC,iBACFF,GAAW,GAFH,SAGFvB,EAAa3B,EAAMqB,EAAOO,GAHxB,OAIRsB,GAAW,GAJH,2CAAF,sDADV,UAQE,cAAC,EAAD,CAAalD,KAAMA,EAAMqB,MAAOA,EAAOpB,KAAMA,IAC7C,cAAC,EAAD,CAAWD,KAAMA,EAAMQ,QAASA,EAASC,QAASA,IAClD,cAAC,EAAD,CAAaY,MAAOA,EAAOC,SAAUA,IACpC,CAAC,SAAU,WAAY,YAAY+B,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAEE7B,KAAK,QACLC,QAASL,IAAUiC,EACnBrC,SAAU,kBAAMK,EAASgC,IACzB9B,MAAK,UAAK8B,EAAI,GAAGnD,eAAZ,OAA4BmD,EAAIC,MAAM,KAL7C,cACcD,aClBTE,EAVA,WACb,OACE,wBAAQtD,UAAU,qCAAlB,SACE,mBAAGuD,KAAK,kDAAkDtC,OAAO,SAASuC,IAAI,aAA9E,SACE,mBAAGxD,UAAU,wECeNyD,EAhBH,WACV,OACE,sBAAKzD,UAAU,6CAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,qBAAKA,UAAU,gIACf,qBAAKA,UAAU,8EAAf,SACE,cAAC,EAAD,WAIN,cAAC,EAAD,QCTN0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1fad309c.chunk.js","sourcesContent":["const DataDisplay = (props) => {\n  const { code, data } = props;\n\n  if (data) {\n    return (\n      <div className=\"DataDisplay mb-3\">\n        <h1 className=\"text-5xl mb-3 text-gradient-reverse font-bold\">{code.toUpperCase() || \"Enter code:\"}</h1>\n        <p>Temp: <strong>{data.temp}</strong></p>\n        <p>Feels like: <strong>{data.feelsLike}</strong></p>\n        <p>Description: <strong>{data.description}</strong></p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"DataDisplay mb-3\">\n      <h1 className=\"text-5xl mb-3 text-gradient-reverse font-bold\">{code.toUpperCase() || \"Enter code:\"}</h1>\n      <p>Temp: <strong>N/A</strong></p>\n      <p>Feels like: <strong>N/A</strong></p>\n      <p>Description: <strong>N/A</strong></p>\n    </div>\n  );\n};\n\nexport default DataDisplay;\n","const CodeInput = (props) => {\n  const { code, setCode, loading } = props;\n\n  const button = loading ? (\n    <button disabled className=\"p-2 text-white bg-teal-600 border rounded-r-lg\">\n      Loading\n    </button>\n  ) : (\n    <button type=\"submit\" className=\"p-2 text-white bg-teal-500 hover:bg-teal-600 border rounded-r-lg\">\n      Submit\n    </button>\n  );\n\n  return (\n    <div className=\"CodeInput mb-3\">\n      <small className=\"block mb-2\">(For Canadian postal codes, first 3 characters only)</small>\n      <input\n        type=\"text\"\n        placeholder=\"ZIP/Postal Code\"\n        pattern=\"^([A-Za-z]\\d[A-Za-z])|(\\d{5})$\"\n        maxLength=\"5\"\n        className=\"p-2 border rounded-l-lg\"\n        value={code}\n        disabled={loading}\n        onChange={(e) => setCode(e.target.value)}\n      />\n      {button}\n    </div>\n  );\n};\n\nexport default CodeInput;\n","const UnitsSelect = (props) => {\n  const { units, setUnits } = props;\n\n  return (\n    <select\n      value={units}\n      className=\"mb-3 p-2 border rounded-lg mr-auto\"\n      onChange={(e) => setUnits(e.target.value)}\n    >\n      <option value=\"metric\">Celsius</option>\n      <option value=\"imperial\">Fahrenheit</option>\n      <option value=\"standard\">Kelvin</option>\n    </select>\n  );\n};\n\nexport default UnitsSelect;\n","const UnitsRadio = (props) => {\n  const { label, name, checked, onChange } = props;\n\n  return (\n    <label className=\"block mb-1\">\n      <input\n        type=\"radio\"\n        className=\"mr-1\"\n        name={name}\n        checked={checked}\n        onChange={onChange}\n      />\n      {label}\n    </label>\n  );\n};\n\nexport default UnitsRadio;\n","const fetchWeather = async (code, units, setData) => {\n  code = new RegExp(/([a-z]\\d[a-z])/i).test(code) ? `${code},ca` : code;\n\n  const urlBase = 'https://api.openweathermap.org/data/2.5/weather';\n  const urlQuery = `?zip=${code}&units=${units}`;\n\n  const fetchUrl = `${process.env.REACT_APP_BACKEND_URL}/weather`;\n  const method = 'POST';\n  const headers = { 'Content-Type': 'application/json' };\n  const body = JSON.stringify({ urlBase, urlQuery });\n\n  let data = await fetch(fetchUrl, { method, headers, body });\n  data = await data.json();\n\n  // If the status code begins with anything other than 2, then\n  // `setData(null)`. Otherwise, `setData(data)`.\n  data.cod.toString()[0] !== '2' ? setData(null) : setData({\n    temp: data.main.temp,\n    feelsLike: data.main.feels_like,\n    description: data.weather[0].description\n  });\n}\n\nexport default fetchWeather;\n","import { useState } from 'react';\nimport DataDisplay from './DataDisplay/DataDisplay';\nimport CodeInput from './CodeInput/CodeInput';\nimport UnitsSelect from './UnitsSelect/UnitsSelect';\nimport UnitsRadio from './UnitsRadio/UnitsRadio';\nimport fetchWeather from '../../utils/fetchWeather';\n\nconst Weather = () => {\n  const [code, setCode] = useState('');\n  const [units, setUnits] = useState('metric');\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <div className=\"Weather text-gray-700 sm:text-lg max-w-md mx-auto\">\n      <form\n        onSubmit={async (e) => {\n          e.preventDefault();\n          setLoading(true);\n          await fetchWeather(code, units, setData);\n          setLoading(false);\n        }}\n      >\n        <DataDisplay code={code} units={units} data={data} />\n        <CodeInput code={code} setCode={setCode} loading={loading} />\n        <UnitsSelect units={units} setUnits={setUnits} />\n        {['metric', 'imperial', 'standard'].map((val) =>\n          <UnitsRadio\n            key={`key-${val}`}\n            name=\"units\"\n            checked={units === val}\n            onChange={() => setUnits(val)}\n            label={`${val[0].toUpperCase()}${val.slice(1)}`}\n          />\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default Weather;\n","const Footer = () => {\n  return (\n    <footer className=\"Footer mt-auto bg-gradient-reverse\">\n      <a href=\"https://github.com/shah-a/few2.3-02-weather-api\" target=\"_blank\" rel=\"noreferrer\">\n        <i className=\"fab fa-github-alt fa-3x p-10 text-teal-900 hover:text-teal-700\"></i>\n      </a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import Weather from './Weather/Weather';\nimport Footer from './Footer/Footer';\n\nconst App = () => {\n  return (\n    <div className=\"App min-h-screen flex flex-col bg-gray-100\">\n      <div className=\"my-auto sm:mx-auto\">\n        <div className=\"relative py-3 sm:max-w-xl sm:mx-auto\">\n          <div className=\"absolute inset-x-0 inset-y-10 sm:inset-10 bg-gradient shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl\"></div>\n          <div className=\"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20 my-10 sm:m-10\">\n            <Weather />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}